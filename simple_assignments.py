# Project Euler Assignment 1
"""
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
"""
import numpy as np
def project_euler_1(max=100):
    return_array = np.array([])
    list_of_nums = np.arange(1, max)
    return_array = np.append(return_array, 
                             list_of_nums[(list_of_nums%3==0) | 
                                          (list_of_nums%5==0)]
                            ).astype(int)
    return return_array.sum()
    
# Project Euler Assignment 2
"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""
def project_euler_2(max_val=100, print_even=False, print_odd=False):
    fib_seq = np.array([1, 2])
    while True:
        nxt_num = np.sum(fib_seq[-2:])
        if (nxt_num > max_val):
            break
        fib_seq = np.append(fib_seq, nxt_num)
    if print_even:
        print 'Even: ' + str(fib_seq[fib_seq%2 == 0].sum())
    if print_odd:
        print 'Odd: ' + str(fib_seq[fib_seq%2 != 0].sum())
